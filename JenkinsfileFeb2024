pipeline{
    
    tools{
        
        maven "maven3.9.5"
    
    }
    
    triggers {
        
        pollSCM ('* * * * *')
    
    }
    
    options {
        
        buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
        
        timestamps()
    
    }


    agent any
    
    stages{
        
        stage('CheckOutCode')
        
        {
            steps
            
            {
                sendSlackNotifications('STARTED')
                git branch: 'development', changelog: false, credentialsId: '4791225e-7032-4a7d-a804-fd2753751d13', poll: false, url: 'https://github.com/DevOps-01-yenumula/maven-web-application.git'
            }
        }
        
        stage('Build')
        
        {
            steps
            
            {
                sh "mvn clean package"
            }
        
        }
        
        stage('ExecuteSonarQubeReport')
        
        {
            steps
            
            {
                sh "mvn sonar:sonar"
                
            }
        }
        
        stage('UploadArtifactsIntoNexus')
        
        {
            steps
            
            {
                sh "mvn deploy"
            }
        }
        
        stage('DeployAPPIntoTomcat')
        
        {
            steps
            
            {
                sshagent(['ff4bf133-7895-4528-aa33-1db8d4e916b6']) {
       
       sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@18.232.57.177:/opt/apache-tomcat-9.0.85/webapps"
    
        }
            }
        }
    }
    
    post {
  success {
    sendSlackNotifications('SUCCESS')
  }
  failure {
    sendSlackNotifications('FAILURE')
  }
}

}


def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'
  //buildStatus = buildStatus ? "SUCCESS":"FAILURE"

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}
